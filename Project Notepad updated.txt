module elev_control (request_floor, current_floor, over_time, reset, clk, complete, 
							direction, floor_to_go, out_current_floor); 
input [3:0]request_floor;
input over_time;
input[6:0] current_floor;

input clk;
input reset;



output reg [27:0] direction; 
output reg complete;
output reg [6:0] out_current_floor;

output reg [6:0] floor_to_go ;

reg[12:0]clk_count;
reg clk_200;
reg clk_trigger;

always @ (negedge reset)
	begin
		clk_200=1'b0;
		clk_count = 0;
		clk_trigger=1'b0;
		complete = 1'b0;
	end

always @ (posedge clk)
	begin
		if (clk_trigger)
		 begin
			clk_count=clk_count+1;
		 end
		 
		 if (clk_count==5000)
		  begin
			  clk_200=~clk_200;
			  clk_count=0;
		  end
	end 
	
	
always @ (request_floor)
	begin
		clk_trigger=1;
		clk_200=~clk_200;
		out_current_floor<=current_floor;
	end
		  
always @ (negedge reset)
	begin
		if(request_floor[3])
			begin
				//request_floor[2]=0;
				//request_floor[1]=0;
				//request_floor[0]=0;
				floor_to_go=3'b1;
		   end

		else if(request_floor[2])
			begin
				//request_floor[3]=0;
				//request_floor[1]=0;
				//request_floor[0]=0;
				floor_to_go=3'b10;
			end	

		else if(request_floor[1])
			begin
				//request_floor[3]=0;
				//request_floor[2]=0;
				//request_floor[0]=0;
				floor_to_go=3'b11;
			end
			

		else if(request_floor[0])
			begin
				 //request_floor[3]=0;
				 //request_floor[2]=0;
				 //request_floor[1]=0;
				 floor_to_go=3'b100;
			end

		//complete=1'b0;

		case (request_floor)
			//
			4'b1000:floor_to_go=7'b1001111;//1
			4'b0100:floor_to_go=7'b0010010;//2
			4'b0010:floor_to_go=7'b0000110;//3
			4'b0001:floor_to_go=7'b1001100;//4
		endcase
	end

always @(posedge clk)
	 begin
	 complete=0;
		 if(complete==0)
			begin
			 if (floor_to_go>out_current_floor)
				 begin
				  direction=28'b1000001001100011111111111111;
				  out_current_floor = out_current_floor+7'b1;
				 end
		 
			 else if(floor_to_go<out_current_floor)
				begin
				  direction=28'b0001001000000110000010011000;
				  out_current_floor = out_current_floor-7'b1;
				end
			 
			 else if(floor_to_go == out_current_floor)
				 begin
				  complete=1;
				  direction=28'b0001001000000111111111111111;
				 end
			 end
		end
		
endmodule