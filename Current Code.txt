module elevator_control(input_floor, clock, out_request_floor);
input [3:0] input_floor;
input clock;
output reg [6:0] out_request_floor;
reg[3:0] request_floor;

always @ (posedge clock)
	begin
		case(input_floor)
			4'b1000:request_floor=3'b001; // 1st floor
			4'b0100:request_floor=3'b010; // 2nd floor
			4'b0010:request_floor=3'b011; // 3rd floor
			4'b0001:request_floor=3'b100; // 4th floor
			default :request_floor=3'b0;
		endcase
	end 
	
always @ (request_floor)
	begin
		case(request_floor)
			3'b001:out_request_floor=7'b1001111; // display 1
			3'b010:out_request_floor=7'b0010010; // display 2
			3'b011:out_request_floor=7'b0000100; // display 3
			3'b100:out_request_floor=7'b1001100; // display 4
			3'b0:out_request_floor=7'b1111110; // display -
		endcase
	end 
end module		